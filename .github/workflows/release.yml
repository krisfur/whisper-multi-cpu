name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg cmake build-essential
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build package
      run: |
        python -m build
        
    - name: Check package
      run: |
        twine check dist/*
        
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        # Upload source distribution (more reliable for C++ extensions)
        # --skip-existing prevents errors if version already exists
        twine upload dist/*.tar.gz --skip-existing
        
    - name: Create GitHub Release
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        echo "Creating release for version: $VERSION"
        
        # Check if release already exists
        if gh release view $VERSION --repo $GITHUB_REPOSITORY >/dev/null 2>&1; then
          echo "Release $VERSION already exists, skipping creation"
        else
          # Create release with auto-generated notes
          gh release create $VERSION \
            --title "Release $VERSION" \
            --notes "Audio file support and CPU-first design release" \
            --repo $GITHUB_REPOSITORY
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 